accessible: false
author: Yakoub J, Rucquoy A
categories:
- module4
context: |-
    In this task, you have to implement the Observer design pattern for the case of a meteo station:

    .. code-block:: java

        public class MeteoStation extends Observable {
            // YOUR CODE HERE
        }


        public class Client extends Observer {
            // YOUR CODE HERE
        }

    Note that Observable_ and Observer_ are two abstract classes containing abstract methods.
    Therefore, check and read them carefully in order to implement things correctly. For your ``Client`` class you have to extend the observer class and implement a constructor (do not forget instance variables).
    For the ``MeteoStation`` class, extend the Observable abstract class, you will need to use Pair_ for this one.

    Note that your observers start to receive messages at the moment they subscribe but they should not see messages that were broadcast before they
    subscribed.

    You can download the `IntelliJ Project`_ that contains few tests to help you.

    .. _`IntelliJ Project`: /course/LEPL1402/Observer/LEPL1402_Observer.zip

    .. _Observable: /course/LEPL1402/Observer/Observable.java
    .. _Observer: /course/LEPL1402/Observer/Observer.java
    .. _Pair: /course/LEPL1402/Observer/Pair.java
environment: java8scala
evaluate: best
file: ''
groups: false
input_random: '0'
limits:
    memory: '100'
    time: '30'
    output: '2'
name: '[Module 4] Observer design pattern'
network_grading: false
order: 40
problems:
    student_client:
        header: 'Paste here the **body** of your ``Client`` class:'
        default: ''
        type: code
        name: ''
        language: java
    student_station:
        name: ''
        type: code
        default: ''
        language: java
        header: 'Paste here the **body** of your ``MeteoStation`` class:'
run_cmd: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0

accessible: /2019-10-16 23:55:55/2019-10-16 23:55:55
author: Piron H
categories:
- module1
context: |
    The following mcq will introduce you to the next exercise, we strongly recommend you to answer and understand them before starting the exercise Sieve Of Eratosthene implementation.

    The sieve of Eratosthene is an algorithm that helps you determine how many/which of the number are prime numbers in a set of integer from 0 to :math:`n`.

    To implement this algorithm we want you to use a BitSet_, the idea here is to force you to read and understand the java documentation. Thus, we will ask you questions about the different method you might need in the implementation of the sieve.

    The difficulty will increase each question and ask you to read the doc a *bit* more.

    .. _BitSet: https://docs.oracle.com/javase/8/docs/api/java/util/BitSet.html
environment: mcq
evaluate: best
file: ''
groups: false
input_random: '0'
limits:
    time: '30'
    output: '2'
    memory: '100'
name: '[Module 1] MCQ Sieve of Eratosthenes'
network_grading: false
order: 13
problems:
    mcq1:
        choices:
        -   text: 'true'
        -   text: 'false'
            valid: true
        limit: 0
        type: multiple_choice
        header: |+
            What is the value of ``v`` after the following instructions:

            .. code-block:: java

                boolean v;
                BitSet bits = new BitSet(5);
                v = bits.get(3);

        name: Initialization
    mcq2:
        limit: 0
        choices:
        -   text: 'true'
        -   valid: true
            text: 'false'
        header: |+
            What is the value of the 5th bit after those instructions?

            .. code-block:: java

                BitSet bits = new BitSet(10);
                bits.flip(0,4);

        name: Flip
        type: multiple_choice
    mcq3:
        choices:
        -   text: '0'
        -   valid: true
            text: '4'
        -   text: '5'
        -   text: '10'
        header: |+
            What is the value of ``v`` after those instructions?

            .. code-block:: java

                BitSet bits = new BitSet(10);
                int v = 0;
                bits.flip(0,4);
                v = bits.cardinality();

        limit: 0
        name: Cardinality
        type: multiple_choice
    mcq4:
        choices:
        -   text: The value of the bit at index 4 changes.
        -   text: Nothing changes.
            valid: true
        limit: 0
        type: multiple_choice
        header: |-
            What does change after the ``set`` instruction?

            .. code-block:: java

                BitSet bits = new BitSet(10);
                bits.set(4,false);
        name: Set
    mcq5:
        choices:
        -   text: It would compute faster
        -   text: It would take less memory
            valid: true
        -   text: An array is easier to use
        -   text: I don't understand the question
        header: |-
            Consider that you want to implement the method ``numberOfPrime(int n)`` which return the number of prime between 0 and n, using a BitSet, why would it be better than with an array of integer for example?

            **hint:** imagine you want to now how many prime numbers are between 0 and 10^9.
        type: multiple_choice
        limit: 0
        name: Array or BitSet?
run_cmd: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0

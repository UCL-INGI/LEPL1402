accessible: false
author: Yakoub J, Rucquoy A
categories:
- module4
context: |-
    In this task, we will ask you to implement a basic calculator (+,-,*,/) using
    the visitor design pattern. Every expression you will compute will be represented as a tree. A tree contains at least one node
    and every node of the tree is either :

    - a parent node containing two sub nodes (an operand)

    - a leaf (a value)

    Here is an example of how your code is supposed to run:

    .. code-block:: java

        Node root = new Add(                                            //((6-2)/(1+1))+(5*2)
                            new Div(                                   //(6-2)/(1+1)
                                new Sub(new Leaf(6),new Leaf(2))         //6-2
                                new Add(new Leaf(1), new Leaf(1))),      //1+1
                            new Mult(new Leaf(5), new Leaf(2)));         //5*2
        Visitor calculator = new Evaluation();

        calculator.visit((Add)root); // 12


    **We provide you a set of class you have to complete** here_

    There are a lot of classes but please don't panick, this exercise shouldn't require more than 50ish lines of code from you.

    A special case needs you to throw an ``IllegalArgumentException``.

    You can download the `IntelliJ Project`_ that contains few tests to help you.

    .. _`IntelliJ Project`: /course/LEPL1402/Visitor/LEPL1402_Visitor.zip

    .. _here: /course/LEPL1402/Visitor/source.zip
environment: java8scala
evaluate: best
file: ''
groups: false
input_random: '0'
limits:
    memory: '100'
    time: '30'
    output: '2'
name: '[Module 4] Visitor design pattern - Calculator'
network_grading: false
order: 43
problems:
    student_add:
        header: 'Paste here the **BODY** of your Add class:'
        default: ''
        type: code
        name: ''
        language: java
    student_mult:
        language: java
        name: ''
        default: ''
        type: code
        header: 'Paste here the **BODY** of your Mult class:'
    student_div:
        header: 'Paste here the **BODY** of your Div class:'
        type: code
        default: ''
        name: ''
        language: java
    student_sub:
        type: code
        name: ''
        default: ''
        header: 'Paste here the **BODY** of your Sub class:'
        language: java
    student_leaf:
        language: java
        header: 'Paste here the **BODY** of your Leaf class:'
        type: code
        name: ''
        default: ''
    student_evaluation:
        language: java
        header: 'Paste here the **BODY** of your Evaluation class:'
        default: ''
        name: ''
        type: code
run_cmd: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0

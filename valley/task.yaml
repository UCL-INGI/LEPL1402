accessible: /2019-11-08 23:59:00/2019-11-08 23:59:00
author: Bastin J, Piron H
categories:
- module2
context: |
    A geologist is trying to find the deepest valley and the biggest mountain between 2 locations and he thinks you can help him! He'll give you an array of integer like this one:

    .. image:: /course/LEPL1402/valley/arraytest.png
       :scale: 35%
       :align: center
       :height: 184px
       :width: 1771px


    The negative values mean the slope is negative and the positive ones mean it's positive. Thus previous array looks like this:

    .. image:: /course/LEPL1402/valley/schema.png
       :scale: 35%
       :align: center
       :height: 912px
       :width: 1771px

    Your method will return an array containing the depth of the deepest valley at index 0 and the biggest mountain at index 1. In this example, the depth is 5 and the summit is at 3.

    \
    We can define a valley by saying it is sequence of negative number followed by a sequence of positive number with the same amount of numbers. The depth is the length of the sequence.

    Here is the mathematical definition:

    Given :math:`A` an Array of integer :math:`\forall i, 0\leq i < |A|, A[i]\neq 0`,
    Given :math:`v` the length of the longest valley,
    :math:`\exists ! i,j` with :math:`0\leq i < j \leq |A|` so that :math:`\forall m` , :math:`i \leq m < (j-i)/2` , :math:`A[m]<0` and :math:`\forall n` , :math:`(j-i)/2 < m \leq j` , :math:`A[n]>0` , :math:`j-i > v*2`


    \
    We can define a mountain by saying it is sequence of positive number followed by a sequence of negative number with the same amount of numbers. The height is the length of the sequence.

    Here is the mathematical definition:

    Given :math:`A` an Array of integer :math:`\forall i, 0\leq i < |A|, A[i]\neq 0`,
    Given :math:`v` the length of the longest valley,
    :math:`\exists ! i,j` with :math:`0\leq i < j \leq |A|` so that :math:`\forall m` , :math:`i \leq m < (j-i)/2` , :math:`A[m]>0` and :math:`\forall n` , :math:`(j-i)/2 < m \leq j` , :math:`A[n]<0` , :math:`j-i > v*2`

    Consider that the array is never gonna be empty and your method should have a theta(n) complexity
    \

    Here is the class you have to fill:

    .. code-block:: java

        public class Valley{
            /*
             * Example:
             * [1, 1, 1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, -1, -1]
             * Should return
             * [5, 3]
             */

             public static int[] valley ( int[] array){
             //TODO By Student

            }
        }

    You can download the `IntelliJ Project`_ that contains few tests to help you.

    .. _`IntelliJ Project`: /course/LEPL1402/valley/LEPL1402_valley.zip
environment: pyjavacpp
evaluate: best
file: ''
groups: false
input_random: '0'
limits:
    memory: '100'
    output: '2'
    time: '30'
name: '[Module 2] Longest Valley'
network_grading: false
order: 23
problems:
    student_code:
        language: java
        header: Paste here the **body** of your methode ``valley``
        type: code
        name: ''
        default: ''
    student_additionnal:
        optional: 'on'
        language: java
        type: code
        default: ''
        header: Paste here your additionnal methods
        name: ''
run_cmd: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
